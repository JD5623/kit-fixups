diff -Nur krb5-1.15.1/src/kdc/do_as_req.c krb5-1.15.1-fixed/src/kdc/do_as_req.c
--- src/kdc/do_as_req.c	2017-03-02 22:06:02.000000000 +0000
+++ src/kdc/do_as_req.c	2017-12-15 14:47:57.317873864 +0000
@@ -365,8 +365,8 @@
     did_log = 1;
 
 egress:
-    if (errcode != 0)
-        assert (state->status != 0);
+	 if (errcode != 0 && state->status == NULL)
+		state->status = "UNKNOWN_REASON";
 
     au_state->status = state->status;
     au_state->reply = &state->reply;
diff -Nur krb5-1.15.1/src/kdc/do_tgs_req.c krb5-1.15.1-fixed/src/kdc/do_tgs_req.c
--- src/kdc/do_tgs_req.c	2017-03-02 22:06:02.000000000 +0000
+++ src/kdc/do_tgs_req.c	2017-12-15 14:49:27.853555204 +0000
@@ -823,7 +823,8 @@
     free(reply.enc_part.ciphertext.data);
 
 cleanup:
-    assert(status != NULL);
+	 if (status == NULL)
+		status = "UNKNOWN_REASON";
     if (reply_key)
         krb5_free_keyblock(kdc_context, reply_key);
     if (errcode)
diff -Nur krb5-1.15.1/src/kdc/kdc_util.c krb5-1.15.1-fixed/src/kdc/kdc_util.c
--- src/kdc/kdc_util.c	2017-03-02 22:06:02.000000000 +0000
+++ src/kdc/kdc_util.c	2017-12-15 14:56:19.464291096 +0000
@@ -1220,10 +1220,12 @@
     req_data.data = (char *)pa_data->contents;
 
     code = decode_krb5_pa_for_user(&req_data, &for_user);
-    if (code)
+	 if (code) {
+		*status = "DECODE_PA_FOR_USER";
         return code;
+	}
 
-    code = verify_for_user_checksum(kdc_context, tgs_session, for_user);
+	 code = verify_for_user_checksum(kdc_context, tgs_session, for_user);
     if (code) {
         *status = "INVALID_S4U2SELF_CHECKSUM";
         krb5_free_pa_for_user(kdc_context, for_user);
@@ -1320,10 +1322,12 @@
     req_data.data = (char *)pa_data->contents;
 
     code = decode_krb5_pa_s4u_x509_user(&req_data, s4u_x509_user);
-    if (code)
+	 if (code) {
+		*status = "DECODE_PA_S4U_X509_USER";
         return code;
+	}
 
-    code = verify_s4u_x509_user_checksum(context,
+	 code = verify_s4u_x509_user_checksum(context,
                                          tgs_subkey ? tgs_subkey :
                                          tgs_session,
                                          &req_data,
@@ -1624,6 +1628,7 @@
      * that is validated previously in validate_tgs_request().
      */
     if (request->kdc_options & (NON_TGT_OPTION | KDC_OPT_ENC_TKT_IN_SKEY)) {
+		*status = "INVALID_S4U2PROXY_OPTIONS";
         return KRB5KDC_ERR_BADOPTION;
     }
 
@@ -1631,6 +1636,7 @@
     if (!krb5_principal_compare(kdc_context,
                                 server->princ, /* after canon */
                                 server_princ)) {
+		*status = "EVIDENCE_TICKET_MISMATCH";
         return KRB5KDC_ERR_SERVER_NOMATCH;
     }
 
